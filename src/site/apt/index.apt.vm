Inrupt's Java Client Libraries

  {{{https://inrupt.com}Inrupt}} provides the following Java client libraries to help developers create {{{https://solidproject.org}Solid}} applications. These libraries provide highly flexible, simple components that can be used in any Java application for {{{https://solidproject.org/TR/protocol}Solid}}. The libraries are composed of different modules that follow a layered architectural approach.

*-------*-----------------*--------*--------------*
|| Layer || Module function || Module || Description |
*-------*-----------------*--------*--------------*
|| Interface Layer | Central abstractions | {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/package-summary.html}api}} | A layer that defines all the central abstractions used by the Java Client Libraries. |
*-------*-----------------*--------*--------------*
|  | Central abstractions | {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/auth/package-summary.html}auth}} | Authentication related abstractions used by the Java Client Libraries. |
*-------*-----------------*--------*--------------*
| | Central abstractions | {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/spi/package-summary.html}spi}} | Service interfaces used by the Java Client Libraries. |
*-------*-----------------*--------*--------------*
| | Central abstractions | {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/util/package-summary.html}util}} | Utility classes for the Java Client Libraries. |
*-------*-----------------*--------*--------------*
|| Core Modules Layer | HTTP interaction    |    {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/httpclient/package-summary.html}httpclient}}    | Http client based on the java.net implementation. |
*-------*-----------------*--------*--------------*
|  | HTTP interaction      |    {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/okhttp/package-summary.html}okhttp}}    | Http client based on the OK HTTP implementation. |
*-------*-----------------*--------*--------------*
|  | JSON processing     |    {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/jackson/package-summary.html}jackson}}    | JSON processing based on jackson. |
*-------*-----------------*--------*--------------*
|  | JSON processing     |    {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/jsonb/package-summary.html}jsonb}}    | JSON processing that uses the JSON-B library. |
*-------*-----------------*--------*--------------*
|  | RDF processing     |    {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/jena/package-summary.html}jena}}    | RDF processing based on the Jena implementation. |
*-------*-----------------*--------*--------------*
|  | RDF processing     |    {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/rdf4j/package-summary.html}rdf4j}}    | RDF processing based on the RDF4J implementation. |
*-------*-----------------*--------*--------------*
|  | Authentication & authorization     |    {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/openid/package-summary.html}openid}}    | Authentication logic based on OpenID & OAuth specification. |
*-------*-----------------*--------*--------------*
|  | Authentication & authorization     |    {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/uma/package-summary.html}uma}}    | Authorization logic based on UMA specification. |
*-------*-----------------*--------*--------------*
|| Domain-Specific Modules Layer | Implementations of API interfaces | {{{corehttps://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/core/package-summary.html}core}} | Provides default implementations for different services. |
*-------*-----------------*--------*--------------*
|  | Solid related data models | {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/solid/package-summary.html}solid}} | Solid resource & container handlers. |
*-------*-----------------*--------*--------------*
|  | WebID Profile data model | {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/webid/package-summary.html}webid}} | Solid WebID handler. |
*-------*-----------------*--------*--------------*
|| Utility Modules | RDF Vocabulary terms | {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/vocabulary/package-summary.html}vocabulary}} | Provides convenience objects for Solid-related identifiers. |
*-------*-----------------*--------*--------------*
|  | Test utilities | {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/test/package-summary.html}test}} | Common tests shared across library modules. |
*-------*-----------------*--------*--------------*
|  | Test utilities | {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/integration/package-summary.html}integration}} | Integration tests. |
*-------*-----------------*--------*--------------*
|| <<Example Applications>> | Sample application | {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/examples/webapp/package-summary.html}webapp}} | A sample web application. |
*-------*-----------------*--------*--------------*
|  | Sample application | {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/examples/cli/package-summary.html}cli}} | A sample CLI application. |
*-------*-----------------*--------*--------------*

* Inrupt's Java Client modules and layers

  Inrupt's Java Client Libraries are composed of different modules that follow a layered architectural approach. Next we will provide an overview of these layers and how to make use of them.
  Make sure to visit the {{{./apidocs/}Documentation}} part for a javadoc style documentation with code examples for each module. 

** Interface Layer

  The {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/package-summary.html}api module}} is an interface module used in mostly all following modules. The provided abstractions are implemented in higher level modules and can be used to plug in your own application specific implementations.

  There are several specific parts to the API module:

  * Classes and interfaces used by developers writing Solid apps. These form the {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/package-summary.html}standard api}} of the Inrupt Java Client Libraries.

  * Classes and interfaces used by developers extending HTTP, JSON or RDF functionalities. These interfaces comprise the {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/spi/package-summary.html}spi}} package and will be used for implementing support for a new RDF processor, JSON processor or HTTP client library.

  * Classes and interfaces used by developers extending authentication functionalities. These interfaces comprise the {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/auth/package-summary.html}auth}} package and are helpful for authentication and authorization.

** Core Modules Layer

    The next listed modules make up what we call the core modules layer of the Java Client Libraries. See these modules as basic building blocks on top of which further Solid and then application specific implementations can be developed. 

  * <<Authentication & Authorization>>

    Authentication & authorization are processes part of verifying the identity of an agent. To access private data on Solid Pods, you must authenticate as a user/agent who has been granted appropriate access to that data.

    Inrupt's Java Client Libraries provide different layers of abstraction to be used when needing authentication and authorization. Low level modules include OpenID and UMA.

    * OpenID

      The {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/openid/package-summary.html}openid module}} builds on top of the {{{https://openid.net/specs/openid-connect-core-1_0.html}OpenID Connect}} standards, which itself builds on the {{{https://datatracker.ietf.org/doc/html/rfc6749}OAuth 2.0}} authorization framework.

    * UMA

      The {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/uma/package-summary.html}uma module}} builds on top of the {{{https://docs.kantarainitiative.org/uma/wg/rec-oauth-uma-grant-2.0.html}UMA}} specification.

    Remark: Higher level abstractions that help with authentication and authorization are part of the {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/core/package-summary.html}core module}}. This module includes classes such as <<<DefaultClient>>> which encapsulates a reactive authentication approach. This class makes use of the basic authentication and authorization modules to automatically determine the preferred authentication and authorization the server needs and then negotiate the according tokens and access. See {{{https://inrupt.github.io/solid-client-java/gettingStarted.html}Getting Started}} for how to use the <<<DefaultClient>>>.

  * <<HTTP interaction>>

    For interacting with a Solid server through a HTTP client there are two low level modules available: the java.net {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/httpclient/package-summary.html}HttpClient}} or the {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/okhttp/package-summary.html}OkHttp}}.

    * HttpClient
        
      This module build on top of the {{{https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/package-summary.html}java.net.http.HttpClient}}.
      For example code and usage visit the javadoc at the {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/httpclient/package-summary.html}httpclient module}}.

    * OkHttp

      This module builds on top of the {{{https://square.github.io/okhttp/}OkHttp}} client.
      For example code and usage visit the javadoc at the {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/okhttp/package-summary.html}okhttp module}}.

  * <<RDF processing>>

    * RDF4J

      {{{https://rdf4j.org/documentation/}RDF4J}} is one of the widely known RDF processing libraries for Java.
      For example code and usage visit the javadoc at the {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/rdf4j/package-summary.html}rdf4j module}}.

    * Jena
        
      {{{https://jena.apache.org/documentation/javadoc.html}Jena}} is one of the widely known RDF processing libraries for Java.
      For example code and usage visit the javadoc at the {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/jena/package-summary.html}jena module}}.

  * <<JSON processing>>

    * JSON-B

      {{{https://javaee.github.io/jsonb-spec/getting-started.html}JSON-B}} is providing a Java API for JSON Bindings.
      Visit the {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/jsonb/package-summary.html}jsonb module}} javadocs for examples of how to make use of it in Inrupt's Java Client Libraries.

    * Jackson

      {{{https://github.com/FasterXML/jackson}Jackson}} is the Java JSON library that helps you parse and work with JSON.
      Visit the {{{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/jackson/package-summary.html}jackson module}} javadocs for examples of how to make use of it in Inrupt's Java Client Libraries.

** Domain-specific Modules Layer

    * <<Implementation of all API interfaces>>

      The {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/core/package-summary.html}core module}} provides implementations of all API interfaces. Among which, a client implementation for use with Solid resources, <<<DefaultCLient>>>.

    * <<Solid specific data models>>

      The {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/solid/package-summary.html}solid module}} provides handlers for Solid resources and containers.

    * <<WebID Profile data models>>

      The {{{https://inrupt.github.io/solid-client-java/apidocs/com/inrupt/client/webid/package-summary.html}webid module}} provides a handler for working with the Solid WebId profile document.

