Usage Examples

    The Inrupt Java Client Libraries come with abstractions such as <<<SolidRDFSource>>> that make it very easy to interact with data stored in a {{{https://solidproject.org/about}Solid Pod}}. 

* What you will need

    * {{{https://start.inrupt.com/profile}A Solid Pod}}

    * About 15 minutes

    * Your favorite text editor or IDE

    * Java 11 or later

    * Maven 3.5 or later

* How to complete

    Take a look at the next simple examples and try them out.

    Next you will have to decide on a {{{./client-options.html}client option}} based on your application needs.

* Working with resources

    In the next examples the <<<podStorage>>> is what you get when you {{{https://start.inrupt.com/profile}register for a Pod}}. And it looks something like <<<https://storage.inrupt.com/d2a8b8b3-1a0f-41cb-a8d1-bc93842fa00d/>>>.

* Create a resource

+----------------
import java.net.URI;
import com.inrupt.client.util.URIBuilder;
import com.inrupt.client.solid.SolidSyncClient;

public void createEmptyResource() {
    SolidSyncClient client = SolidSyncClient.getClient();

    URI newResourceURI = URIBuilder.newBuilder(podStorage).path("newResource").build();

    try (SolidRDFSource newResource = new SolidRDFSource(newResourceURI, null, null)) {
        client.create(newResource);
    }
}

+----------------

* Read a resource

+----------------
import java.net.URI;
import com.inrupt.client.util.URIBuilder;
import com.inrupt.client.solid.SolidSyncClient;

public void readResource() {
    SolidSyncClient client = SolidSyncClient.getClient();

    URI newResourceURI = URIBuilder.newBuilder(podStorage).path("newResource").build();

    SolidRDFSource resource = client.read(newResourceURI, SolidRDFSource.class);
}

+----------------

* Update a resource

    We have created and read a resource which we named <<<newResource>>>. However, the resource is empty, it has no content. Let's add a triple inside.

+----------------
import java.net.URI;
import com.inrupt.client.util.URIBuilder;
import com.inrupt.client.solid.SolidSyncClient;
import com.inrupt.client.spi.RDFFactory;
import org.apache.commons.rdf.api.Dataset;
import org.apache.commons.rdf.api.RDF;

public void updateResource() {
    SolidSyncClient client = SolidSyncClient.getClient();

    URI newResourceURI = URIBuilder.newBuilder(podStorage).path("newResource").build();

    RDF rdf = RDFFactory.getInstance();
    Dataset newDataset = rdf.createDataset();
    newDataset.add(null, 
        rdf.createIRI("https://resource.test/subject"), 
        rdf.createIRI("https://resource.test/predicate"), 
        rdf.createLiteral("TestObject"));

    try (SolidRDFSource updatedResource = new SolidRDFSource(newResourceURI, newDataset, null)) {
        client.update(updatedResource);
    }
}

+----------------

* Delete a resource

+----------------
import com.inrupt.client.solid.SolidSyncClient;

public void deleteResource(SolidResource resource) {
    SolidSyncClient client = SolidSyncClient.getClient();

    client.delete(resource);
}

+----------------

* Next Steps

    Now that you have tried some basic examples, the next step is to consider which {{{./client-options.html}type of client}} you want to make use of.

