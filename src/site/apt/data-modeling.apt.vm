Data Modeling

    Data modeling makes it easy to work with client domain specific objects that go beyond simple Solid resources. The high-level <<<SolidClient>>> and <<<SolidSyncClient>>> make it easy to bind your Java objects to RDF-based Solid resources. This guide will help you structure your class definitions to make this possible.

* What you will need

    * {{{https://start.inrupt.com/profile}A Solid Pod}}

    * About 15 minutes

    * Your favorite text editor or IDE

    * Java 11 or later

    * Maven 3.5 or later

* How to complete

    At first you need to know (or choose) how your data is modeled on the Solid Pod.
    Than one can model your data wite the available domain-specific types of with the class wrapper.

* Different data model approaches

    Let's work with an example to describe the data model options. 

    We want to model a Book Library on the Pod:

      * One Solid Resource - we have a Book Library Solid Resource which contains all the book descriptions part of that library it one Solid Resource or

      * Multiple Solid Resources - we have a Book Library Solid Container which holds more Solid Resources. Each Resource, in turn, contains the description of only one Book.

